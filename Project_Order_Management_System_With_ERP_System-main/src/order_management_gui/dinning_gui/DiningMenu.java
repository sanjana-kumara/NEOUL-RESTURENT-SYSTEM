/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package order_management_gui.dinning_gui;

import com.formdev.flatlaf.themes.FlatMacLightLaf;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.MySql;
import model.PortionData;
import order_management_gui.dinning_gui.Dining;

/**
 *
 * @author Hash_Boy
 */
public class DiningMenu extends javax.swing.JDialog {

    /**
     * Creates new form Dining
     */
    private Dining parent;

    public DiningMenu(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent = (Dining) parent;
        initComponents();
        loadMenu();

    }

    public void setParent(Dining parent) {

        this.parent = parent;

    }

    private order_management_gui.dinning_gui.DiningSelectPortion diningPortion;

    public void setDiningPortion(order_management_gui.dinning_gui.DiningSelectPortion diningSelectPortion) {

        this.diningPortion = diningSelectPortion;

    }

    DefaultTableModel model;

    public void loadMenu() {

        try {

            ResultSet resultSet = MySql.executeSearch("SELECT f.food_id, f.food_name, pt.portion_types_name, f.qty FROM foods f JOIN portion_types pt ON f.portion_types_portion_types_id = pt.portion_types_id WHERE f.food_status_food_status_id = '1'");

            model = (DefaultTableModel) FoodTable.getModel();
            model.setRowCount(0);

            while (resultSet.next()) {

                Vector<String> vector = new Vector<>();
                vector.add(resultSet.getString("food_id"));
                vector.add(resultSet.getString("food_name"));
                vector.add(resultSet.getString("portion_types_name"));
                vector.add(resultSet.getString("qty"));
                model.addRow(vector);

            }

        } catch (Exception e) {

            e.printStackTrace();

        }

    }

    public void addPortionToOrder(PortionData data) {

        double itemPrice = data.getPrice();
        int quantity = data.getQuantity();
        double totalPrice = itemPrice * quantity;

        model.addRow(new Object[]{
            data.getFoodId(),
            data.getFoodName(),
            data.getPortion(),
            quantity,
            String.format("%.2f", itemPrice),
            String.format("%.2f", totalPrice)
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bodyPanel = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        searchTextField = new javax.swing.JTextField();
        searchButton = new com.k33ptoo.components.KButton();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        FoodTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        headerPanel.setBackground(new java.awt.Color(0, 153, 102));
        headerPanel.setPreferredSize(new java.awt.Dimension(555, 50));

        jLabel1.setFont(new java.awt.Font("Audiowide", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dining Menu");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 931, Short.MAX_VALUE)
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        getContentPane().add(headerPanel, java.awt.BorderLayout.PAGE_START);

        bodyPanel.setLayout(new java.awt.BorderLayout());

        searchTextField.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        searchButton.setText("Search");
        searchButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        searchButton.setkEndColor(new java.awt.Color(51, 255, 51));
        searchButton.setkHoverEndColor(new java.awt.Color(0, 153, 102));
        searchButton.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        searchButton.setkHoverStartColor(new java.awt.Color(51, 255, 51));
        searchButton.setkPressedColor(new java.awt.Color(0, 153, 102));
        searchButton.setkSelectedColor(new java.awt.Color(0, 153, 102));
        searchButton.setkStartColor(new java.awt.Color(0, 153, 102));
        searchButton.setPreferredSize(new java.awt.Dimension(185, 32));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(searchTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(292, 292, 292))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        bodyPanel.add(searchPanel, java.awt.BorderLayout.PAGE_START);

        FoodTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        FoodTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "FID", "Food Name", "Portion", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        FoodTable.getTableHeader().setReorderingAllowed(false);
        FoodTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FoodTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(FoodTable);

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 895, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        bodyPanel.add(tablePanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(bodyPanel, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String keyword = searchTextField.getText().trim();

        try {

            String sql = "SELECT f.food_id, f.food_name, pt.portion_types_name "
                    + "FROM foods f "
                    + "JOIN portion_types pt ON f.portion_types_portion_types_id = pt.portion_types_id "
                    + "WHERE f.food_status_food_status_id = '1' "
                    + "AND (f.food_name LIKE '%" + keyword + "%' "
                    + "OR pt.portion_types_name LIKE '%" + keyword + "%')";

            ResultSet rs = MySql.executeSearch(sql);

            DefaultTableModel model = (DefaultTableModel) FoodTable.getModel();

            model.setRowCount(0);

            while (rs.next()) {
                Vector<String> row = new Vector<>();
                row.add(rs.getString("food_id"));
                row.add(rs.getString("food_name"));
                row.add(rs.getString("portion_types_name"));
                model.addRow(row);
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Search failed!");
        }

    }//GEN-LAST:event_searchButtonActionPerformed

    private void FoodTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FoodTableMouseClicked

        try {

            int row = FoodTable.getSelectedRow();

            if (row != -1 && evt.getClickCount() == 2) {

                String foodId = String.valueOf(FoodTable.getValueAt(row, 0));
                String foodName = String.valueOf(FoodTable.getValueAt(row, 1));
                String portionType = String.valueOf(FoodTable.getValueAt(row, 2));
                int qty = Integer.parseInt(String.valueOf(FoodTable.getValueAt(row, 3)));

                if (qty == 0) {

                    JOptionPane.showMessageDialog(null, "Sorry, this item is out of stock!");

                    return;

                }

                ResultSet resultSet = MySql.executeSearch("SELECT * FROM `foods` WHERE `food_id` = '" + foodId + "'");

                if (resultSet.next()) {

                    Double price = Double.parseDouble(resultSet.getString("price"));

                    DiningSelectPortion dsp = new DiningSelectPortion((JFrame) SwingUtilities.getWindowAncestor(this), true, parent);

                    dsp.setFoodID(foodId);
                    dsp.setFoodName(foodName);
                    dsp.setPortionType(portionType);
                    dsp.setfoodPrice(price);
                    dsp.setVisible(true);
                }

            }

        } catch (Exception e) {

            e.printStackTrace();

        }


    }//GEN-LAST:event_FoodTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        FlatMacLightLaf.setup();

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DiningMenu dialog = new DiningMenu(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable FoodTable;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.k33ptoo.components.KButton searchButton;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JPanel tablePanel;
    // End of variables declaration//GEN-END:variables
}
