/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hr_department_gui;

import java.sql.ResultSet;
import com.formdev.flatlaf.themes.FlatMacLightLaf;
import com.mysql.cj.protocol.Resultset;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.MySql;

/**
 *
 * @author GOLDEN FIELD
 */
public class LeaveManage extends javax.swing.JFrame {

    /**
     * Creates new form LeaveManage
     */
    public LeaveManage() {

        initComponents();

        generateButton.grabFocus();

        LoadLeaveTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void LoadLeaveTable() {

        try {

            ResultSet resultSet = MySql.executeSearch("SELECT * FROM `leave` ");

            DefaultTableModel LeavedefaultTableModel = (DefaultTableModel) ManageLeaveTable.getModel();

            LeavedefaultTableModel.setRowCount(0);

            while (resultSet.next()) {

                Vector<String> vector = new Vector<>();

                vector.add(resultSet.getString("leave_id"));
                vector.add(resultSet.getString("employee_employee_id"));
                vector.add(resultSet.getString("employee_name"));
                vector.add(resultSet.getString("date_from"));
                vector.add(resultSet.getString("date_to"));

                LeavedefaultTableModel.addRow(vector);

            }

        } catch (Exception e) {

            e.printStackTrace();

        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bodyPanel = new javax.swing.JPanel();
        AddLeavePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        DateChooseFromDateField = new com.toedter.calendar.JDateChooser();
        DateChooseToDateField = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        addButton = new com.k33ptoo.components.KButton();
        updateButton = new com.k33ptoo.components.KButton();
        refreshButton = new javax.swing.JButton();
        deleteButton = new com.k33ptoo.components.KButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        leaveIDTextField = new javax.swing.JTextField();
        generateButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        employeeIDTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        employeeNameTextField = new javax.swing.JTextField();
        holidayButton = new com.k33ptoo.components.KButton();
        BodyPanelLeaveSearchAndTable = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        searchEmployeeIDTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        searchEmployeeNameTextField = new javax.swing.JTextField();
        ManageLeaveTablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ManageLeaveTable = new javax.swing.JTable();
        BackToDashboardPanel = new javax.swing.JPanel();
        BackToDashboardButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        headerPanel.setBackground(new java.awt.Color(153, 153, 153));
        headerPanel.setPreferredSize(new java.awt.Dimension(708, 50));

        jLabel1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel1.setFont(new java.awt.Font("Audiowide", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Leave");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addGap(300, 300, 300))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        getContentPane().add(headerPanel, java.awt.BorderLayout.PAGE_START);

        bodyPanel.setLayout(new java.awt.BorderLayout());

        AddLeavePanel.setPreferredSize(new java.awt.Dimension(777, 230));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel2.setText("From");

        DateChooseFromDateField.setDateFormatString("yyyy-MM-dd");
        DateChooseFromDateField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DateChooseFromDateFieldKeyPressed(evt);
            }
        });

        DateChooseToDateField.setDateFormatString("yyyy-MM-dd");
        DateChooseToDateField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DateChooseToDateFieldKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("To");

        addButton.setText("Add");
        addButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addButton.setkEndColor(new java.awt.Color(0, 204, 204));
        addButton.setkHoverEndColor(new java.awt.Color(0, 102, 153));
        addButton.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        addButton.setkHoverStartColor(new java.awt.Color(0, 204, 204));
        addButton.setkPressedColor(new java.awt.Color(0, 102, 153));
        addButton.setkSelectedColor(new java.awt.Color(0, 102, 153));
        addButton.setkStartColor(new java.awt.Color(0, 102, 153));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        updateButton.setkEndColor(new java.awt.Color(0, 204, 204));
        updateButton.setkHoverEndColor(new java.awt.Color(0, 102, 153));
        updateButton.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        updateButton.setkHoverStartColor(new java.awt.Color(0, 204, 204));
        updateButton.setkPressedColor(new java.awt.Color(0, 102, 153));
        updateButton.setkSelectedColor(new java.awt.Color(0, 102, 153));
        updateButton.setkStartColor(new java.awt.Color(0, 102, 153));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/refresh.png"))); // NOI18N
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteButton.setkEndColor(new java.awt.Color(0, 204, 204));
        deleteButton.setkHoverEndColor(new java.awt.Color(0, 102, 153));
        deleteButton.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        deleteButton.setkHoverStartColor(new java.awt.Color(0, 204, 204));
        deleteButton.setkPressedColor(new java.awt.Color(0, 102, 153));
        deleteButton.setkSelectedColor(new java.awt.Color(0, 102, 153));
        deleteButton.setkStartColor(new java.awt.Color(0, 102, 153));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Leave ID");

        leaveIDTextField.setEditable(false);
        leaveIDTextField.setEnabled(false);

        generateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/generate.png"))); // NOI18N
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });
        generateButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                generateButtonKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Employee Name");

        employeeIDTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                employeeIDTextFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                employeeIDTextFieldKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Employee ID");

        employeeNameTextField.setEditable(false);
        employeeNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                employeeNameTextFieldKeyPressed(evt);
            }
        });

        holidayButton.setText("Holidays");
        holidayButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        holidayButton.setkEndColor(new java.awt.Color(0, 204, 204));
        holidayButton.setkHoverEndColor(new java.awt.Color(0, 102, 153));
        holidayButton.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        holidayButton.setkHoverStartColor(new java.awt.Color(0, 204, 204));
        holidayButton.setkPressedColor(new java.awt.Color(0, 102, 153));
        holidayButton.setkSelectedColor(new java.awt.Color(0, 102, 153));
        holidayButton.setkStartColor(new java.awt.Color(0, 102, 153));
        holidayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holidayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddLeavePanelLayout = new javax.swing.GroupLayout(AddLeavePanel);
        AddLeavePanel.setLayout(AddLeavePanelLayout);
        AddLeavePanelLayout.setHorizontalGroup(
            AddLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addGroup(AddLeavePanelLayout.createSequentialGroup()
                .addContainerGap(102, Short.MAX_VALUE)
                .addGroup(AddLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddLeavePanelLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(leaveIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(generateButton)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(employeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addGap(12, 12, 12)
                        .addComponent(employeeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddLeavePanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DateChooseFromDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(DateChooseToDateField, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(102, Short.MAX_VALUE))
            .addGroup(AddLeavePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(holidayButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(refreshButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AddLeavePanelLayout.setVerticalGroup(
            AddLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddLeavePanelLayout.createSequentialGroup()
                .addGroup(AddLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddLeavePanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(AddLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AddLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(leaveIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(AddLeavePanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(AddLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(employeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(employeeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(AddLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(DateChooseToDateField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DateChooseFromDateField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(addButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(AddLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(refreshButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AddLeavePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(holidayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bodyPanel.add(AddLeavePanel, java.awt.BorderLayout.PAGE_START);

        BodyPanelLeaveSearchAndTable.setLayout(new java.awt.BorderLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(815, 60));

        searchEmployeeIDTextField.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel4.setText("Search By Employee ID");

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel5.setText("Search By Employee Name");

        searchEmployeeNameTextField.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(12, 12, 12)
                .addComponent(searchEmployeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel5)
                .addGap(12, 12, 12)
                .addComponent(searchEmployeeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(searchEmployeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(searchEmployeeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        BodyPanelLeaveSearchAndTable.add(jPanel1, java.awt.BorderLayout.PAGE_START);

        ManageLeaveTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Leave ID", "Employee ID", "Employee Name", "From", "To"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ManageLeaveTable.getTableHeader().setReorderingAllowed(false);
        ManageLeaveTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ManageLeaveTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ManageLeaveTable);

        BackToDashboardPanel.setBackground(new java.awt.Color(153, 153, 153));
        BackToDashboardPanel.setPreferredSize(new java.awt.Dimension(779, 50));

        BackToDashboardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/back-arrow.png"))); // NOI18N
        BackToDashboardButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BackToDashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToDashboardButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BackToDashboardPanelLayout = new javax.swing.GroupLayout(BackToDashboardPanel);
        BackToDashboardPanel.setLayout(BackToDashboardPanelLayout);
        BackToDashboardPanelLayout.setHorizontalGroup(
            BackToDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackToDashboardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackToDashboardButton)
                .addContainerGap(1144, Short.MAX_VALUE))
        );
        BackToDashboardPanelLayout.setVerticalGroup(
            BackToDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackToDashboardPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BackToDashboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout ManageLeaveTablePanelLayout = new javax.swing.GroupLayout(ManageLeaveTablePanel);
        ManageLeaveTablePanel.setLayout(ManageLeaveTablePanelLayout);
        ManageLeaveTablePanelLayout.setHorizontalGroup(
            ManageLeaveTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackToDashboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1188, Short.MAX_VALUE)
            .addGroup(ManageLeaveTablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        ManageLeaveTablePanelLayout.setVerticalGroup(
            ManageLeaveTablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageLeaveTablePanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(BackToDashboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        BodyPanelLeaveSearchAndTable.add(ManageLeaveTablePanel, java.awt.BorderLayout.CENTER);

        bodyPanel.add(BodyPanelLeaveSearchAndTable, java.awt.BorderLayout.CENTER);

        getContentPane().add(bodyPanel, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //BackButtonCode

    private void BackToDashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToDashboardButtonActionPerformed

        this.dispose();

    }//GEN-LAST:event_BackToDashboardButtonActionPerformed

    private void holidayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holidayButtonActionPerformed

        HoliDays leave = new HoliDays(this, true);
        
        leave.setVisible(true);

    }//GEN-LAST:event_holidayButtonActionPerformed

    private void employeeIDTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeeIDTextFieldKeyReleased

        String empId = employeeIDTextField.getText();

        try {

            if (empId.isEmpty()) {

                employeeNameTextField.setText("");
                
                return;

            } else {

                try {

                    ResultSet resultset = MySql.executeSearch("SELECT * FROM `employee` WHERE `employee_id` = '" + empId + "' ");

                    if (resultset.next()) {

                        String fullName = resultset.getString("first_name") + " " + resultset.getString("last_name");

                        employeeNameTextField.setText(fullName);

                    }else{
                        
                        JOptionPane.showMessageDialog(this, "Something Went Wrong", "Error", JOptionPane.WARNING_MESSAGE);
                        
                    }

                } catch (Exception e) {

                    e.printStackTrace();

                }

            }

        } catch (Exception e) {

            e.printStackTrace();
        }

    }//GEN-LAST:event_employeeIDTextFieldKeyReleased

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        //reset button
        reset();

    }//GEN-LAST:event_refreshButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // Add Data
        try {
            String leave = leaveIDTextField.getText();
            String employeeID = employeeIDTextField.getText();
            String employeeName = employeeNameTextField.getText();
            Date DateChooseFrom = DateChooseFromDateField.getDate();
            Date DateChooseTo = DateChooseToDateField.getDate();

            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

            //Validate leave ID
            if (leave.isBlank()) {
                JOptionPane.showMessageDialog(this, "Please genarate the id", "Warning", JOptionPane.WARNING_MESSAGE);

                return;

                //Validate employee ID
            }
            if (employeeID.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter employee id", "Warning", JOptionPane.WARNING_MESSAGE);

                //Validate DateChooseFrom
            } else if (DateChooseFrom == null) {
                JOptionPane.showMessageDialog(this, "Please select a 'From' date", "Warning", JOptionPane.WARNING_MESSAGE);

            }//Validate DateChooseTo
            else if (DateChooseTo == null) {
                JOptionPane.showMessageDialog(this, "Please select a 'to' date", "Warning", JOptionPane.WARNING_MESSAGE);

            } else {

                String fromDateChooser = dateFormat.format(DateChooseFrom);
                String toDateChooser = dateFormat.format(DateChooseTo);
                MySql.executeUpdate("INSERT INTO `leave` (`leave_id`,`employee_name`,`date_from`,`date_to`,`employee_employee_id`) VALUES "
                        + "('" + leave + "','" + employeeName + "','" + fromDateChooser + "','" + toDateChooser + "','" + employeeID + "')");

                LoadLeaveTable();

                JOptionPane.showMessageDialog(this, employeeName + "'s" + " " + "Leave added successfully", "Successfully added leave", JOptionPane.INFORMATION_MESSAGE);

                reset();

            }

        } catch (Exception e) {

            e.printStackTrace();

            JOptionPane.showMessageDialog(this, "An error occurred" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_addButtonActionPerformed

    private void ManageLeaveTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ManageLeaveTableMouseClicked
        // Get data from the table
        int row = ManageLeaveTable.getSelectedRow();

        generateButton.grabFocus();

        String leave = String.valueOf(ManageLeaveTable.getValueAt(row, 0));
        leaveIDTextField.setText(leave);

        String employeeId = String.valueOf(ManageLeaveTable.getValueAt(row, 1));
        employeeIDTextField.setText(employeeId);

        String employee = String.valueOf(ManageLeaveTable.getValueAt(row, 2));
        employeeNameTextField.setText(employee);

        try {

            String dateChooserFrom = String.valueOf(ManageLeaveTable.getValueAt(row, 3));
            // Parse the date string and set it to the JDateChooser
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date date = sdf.parse(dateChooserFrom);
            DateChooseFromDateField.setDate(date);

            String dateChooserTo = String.valueOf(ManageLeaveTable.getValueAt(row, 4));
            // Parse the date string and set it to the JDateChooser
            SimpleDateFormat sdt = new SimpleDateFormat("yyyy-MM-dd");
            Date datet = sdt.parse(dateChooserFrom);
            DateChooseToDateField.setDate(datet);

        } catch (Exception e) {

            e.printStackTrace();

        }

    }//GEN-LAST:event_ManageLeaveTableMouseClicked

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed

        leaveIDTextField.setCursor(new Cursor(Cursor.HAND_CURSOR));

        // Sets back to Employee Id Color origin
        leaveIDTextField.setForeground(Color.BLACK);

        // Generate Id when button clicked
        long id = System.currentTimeMillis();
        leaveIDTextField.setText("LEA" + String.valueOf(id));

        // Enable the text field (if it was disabled)
        leaveIDTextField.setEnabled(true);

        // Request focus to the text field
        leaveIDTextField.setFocusable(true);

    }//GEN-LAST:event_generateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        int tableRow = ManageLeaveTable.getSelectedRow();

        if (tableRow == -1) {

            JOptionPane.showMessageDialog(this, "Please select a row to  delete", "Empty Row", JOptionPane.WARNING_MESSAGE);

        } else {

            String leaveID = String.valueOf(ManageLeaveTable.getValueAt(tableRow, 0));
            String employeeID = String.valueOf(ManageLeaveTable.getValueAt(tableRow, 1));
            String employeeName = String.valueOf(ManageLeaveTable.getValueAt(tableRow, 2));

            int confirmDelete = JOptionPane.showConfirmDialog(this, "Do you want to delete" + " " + employeeName, "Leave Delete",
                    JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

            if (confirmDelete == JOptionPane.YES_NO_OPTION) {

                try {

                    MySql.executeUpdate("DELETE FROM `leave` WHERE `leave_id` = '" + leaveID + "' AND `employee_employee_id` = '" + employeeID + "' ");

                    JOptionPane.showMessageDialog(this, employeeName + "'s" + " " + "Leave Delete Successfully", "Leave Delete Success", JOptionPane.INFORMATION_MESSAGE);

                    LoadLeaveTable();

                } catch (Exception e) {

                    e.printStackTrace();

                }

            }

        }

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void employeeIDTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeeIDTextFieldKeyPressed

        //set the grabfocus for DateChooserFromTextField TextField
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            employeeNameTextField.grabFocus();

        }

    }//GEN-LAST:event_employeeIDTextFieldKeyPressed

    private void DateChooseFromDateFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DateChooseFromDateFieldKeyPressed

        //set the grabfocus for DateChooserFromTextField TextField
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            DateChooseToDateField.grabFocus();

        }

    }//GEN-LAST:event_DateChooseFromDateFieldKeyPressed

    private void DateChooseToDateFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DateChooseToDateFieldKeyPressed

        //set the grabfocus for DateChooserFromTextField TextField
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            addButton.grabFocus();

        }

    }//GEN-LAST:event_DateChooseToDateFieldKeyPressed

    private void generateButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_generateButtonKeyPressed

        //set the grabfocus for DateChooserFromTextField TextField
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            employeeIDTextField.grabFocus();

        }

    }//GEN-LAST:event_generateButtonKeyPressed

    private void employeeNameTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_employeeNameTextFieldKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            DateChooseFromDateField.grabFocus();

        }

    }//GEN-LAST:event_employeeNameTextFieldKeyPressed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed

        int row = ManageLeaveTable.getSelectedRow();

        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select the row you want to update", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            String leaveID = leaveIDTextField.getText().trim();
            String employeeID = employeeIDTextField.getText().trim();
            String employeeName = employeeNameTextField.getText().trim();
            Date dateFrom = DateChooseFromDateField.getDate();
            Date dateTo = DateChooseToDateField.getDate();

            // Validate inputs
            if (leaveID.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please generate the leave ID", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (employeeID.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter employee ID", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (dateFrom == null) {
                JOptionPane.showMessageDialog(this, "Please select a 'From' date", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (dateTo == null) {
                JOptionPane.showMessageDialog(this, "Please select a 'To' date", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Format dates
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String fromDate = dateFormat.format(dateFrom);
            String toDate = dateFormat.format(dateTo);

            MySql.executeUpdate("UPDATE  `leave`  SET  `employee_name` = ' " + employeeName + "', "
                    + "`date_from` = ' " + fromDate + " ' , `date_to` = ' " + toDate + " '  WHERE  `leave_id` =  '" + leaveID + "'  ");

            JOptionPane.showMessageDialog(this, "Sucssesfuly Updated", "Warning", JOptionPane.INFORMATION_MESSAGE);

            LoadLeaveTable();

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_updateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        FlatMacLightLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LeaveManage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddLeavePanel;
    private javax.swing.JButton BackToDashboardButton;
    private javax.swing.JPanel BackToDashboardPanel;
    private javax.swing.JPanel BodyPanelLeaveSearchAndTable;
    private com.toedter.calendar.JDateChooser DateChooseFromDateField;
    private com.toedter.calendar.JDateChooser DateChooseToDateField;
    private javax.swing.JTable ManageLeaveTable;
    private javax.swing.JPanel ManageLeaveTablePanel;
    private com.k33ptoo.components.KButton addButton;
    private javax.swing.JPanel bodyPanel;
    private com.k33ptoo.components.KButton deleteButton;
    private javax.swing.JTextField employeeIDTextField;
    private javax.swing.JTextField employeeNameTextField;
    private javax.swing.JButton generateButton;
    private javax.swing.JPanel headerPanel;
    private com.k33ptoo.components.KButton holidayButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField leaveIDTextField;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTextField searchEmployeeIDTextField;
    private javax.swing.JTextField searchEmployeeNameTextField;
    private com.k33ptoo.components.KButton updateButton;
    // End of variables declaration//GEN-END:variables

    private void reset() {

        leaveIDTextField.setText("");
        employeeIDTextField.setText("");
        employeeNameTextField.setText("");
        ManageLeaveTable.clearSelection();
        generateButton.grabFocus();
        DateChooseFromDateField.setDate(null);
        DateChooseToDateField.setDate(null);

    }
}
