/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hr_department_gui;

import com.formdev.flatlaf.themes.FlatMacLightLaf;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.MySql;

/**
 *
 * @author 2003k
 */
public class AddNewSupplier extends javax.swing.JFrame {

    private static HashMap<String, String> companyMap = new HashMap<>();

    /**
     * Creates new form AddNewSupplier
     */
    public AddNewSupplier() {
        initComponents();
        addPlaceholder();
        loadCompany();
        loadSuppliers();
        LoadCompanySelectComboBox();
        jButton1.grabFocus();
        SupplierIdTextField.setEditable(false);

    }

    private void addPlaceholder() {

        SupplierIdTextField.setText("Supplier ID");
        SupplierIdTextField.setForeground(Color.GRAY);

        FirstNameTextField.setText("First Name");
        FirstNameTextField.setForeground(Color.GRAY);

        LastNameTextfield.setText("Last Name");
        LastNameTextfield.setForeground(Color.GRAY);

        ContactTextfield.setText("Contact Number");
        ContactTextfield.setForeground(Color.GRAY);

        EmailTextfield.setText("Email");
        EmailTextfield.setForeground(Color.GRAY);

    }

    // Load companies into the combo box
    private void loadCompany() {
        try {

            ResultSet resultSet = MySql.executeSearch("SELECT * FROM `company` ");
            Vector<String> vector = new Vector<>();
            vector.add("Select Company");

            while (resultSet.next()) {
                vector.add(resultSet.getString("company_name"));
                companyMap.put(resultSet.getString("company_name"), resultSet.getString("company_id"));
            }

            DefaultComboBoxModel model = new DefaultComboBoxModel(vector);
            CompanyComboBox.setModel(model);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    // Load companies into the combo box
    private void LoadCompanySelectComboBox() {
        try {

            ResultSet resultSet = MySql.executeSearch("SELECT * FROM `company` ");
            Vector<String> vector = new Vector<>();
            vector.add("Select Company");

            while (resultSet.next()) {
                vector.add(resultSet.getString("company_name"));
                companyMap.put(resultSet.getString("company_name"), resultSet.getString("company_id"));
            }

            DefaultComboBoxModel model1 = new DefaultComboBoxModel(vector);
            CompanySelectCombobox.setModel(model1);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    //load suppliers to table
    private void loadSuppliers() {

        DefaultTableModel model = (DefaultTableModel) SupplierTable.getModel();

        model.setRowCount(0);

        try {

            ResultSet rs = MySql.executeSearch("SELECT * FROM `supplier` INNER JOIN `company` ON"
                    + " `company`.`company_id` = `supplier`.`company_company_id` INNER JOIN `gender` ON"
                    + " `gender`.`gender_id` = `supplier`.`gender_gender_id` ");

            while (rs.next()) {

                Vector<String> vector = new Vector<>();

                vector.add(rs.getString("supplier_id"));
                vector.add(rs.getString("first_name"));
                vector.add(rs.getString("last_name"));
                vector.add(rs.getString("contact_number"));
                vector.add(rs.getString("email"));
                vector.add(rs.getString("company.company_name"));
                vector.add(rs.getString("gender.gender_name"));

                model.addRow(vector);

            }

        } catch (Exception e) {

            e.printStackTrace();

        }

    }

    //search using company combobox
    private void searchByCompany(String searchTerm) {
        DefaultTableModel model = (DefaultTableModel) SupplierTable.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<>(model);
        SupplierTable.setRowSorter(tr);

        tr.setRowFilter(RowFilter.regexFilter("(?i)" + searchTerm, 5));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        kButton1 = new com.k33ptoo.components.KButton();
        headerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bodyPanel = new javax.swing.JPanel();
        supplierAddPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        SupplierIdTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        MaleRadioButton = new javax.swing.JRadioButton();
        FemaleRadioButton = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        FirstNameTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ContactTextfield = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        LastNameTextfield = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        EmailTextfield = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        addButton = new com.k33ptoo.components.KButton();
        updateButton = new com.k33ptoo.components.KButton();
        deleteButton = new com.k33ptoo.components.KButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SupplierTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        CompanyComboBox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        CompanySelectCombobox = new javax.swing.JComboBox<>();
        BackToDashboardPanel = new javax.swing.JPanel();
        BackToDashboardButton = new javax.swing.JButton();

        kButton1.setText("kButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        headerPanel.setBackground(new java.awt.Color(153, 153, 153));
        headerPanel.setPreferredSize(new java.awt.Dimension(928, 45));
        headerPanel.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Audiowide", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Supplier ");
        jLabel1.setPreferredSize(new java.awt.Dimension(181, 50));
        headerPanel.add(jLabel1, java.awt.BorderLayout.CENTER);

        getContentPane().add(headerPanel, java.awt.BorderLayout.PAGE_START);

        bodyPanel.setLayout(new java.awt.BorderLayout());

        supplierAddPanel.setPreferredSize(new java.awt.Dimension(946, 234));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel2.setText("Supplier ID");

        SupplierIdTextField.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        SupplierIdTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                SupplierIdTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                SupplierIdTextFieldFocusLost(evt);
            }
        });
        SupplierIdTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SupplierIdTextFieldKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel3.setText("Gender");

        buttonGroup1.add(MaleRadioButton);
        MaleRadioButton.setText("Male");

        buttonGroup1.add(FemaleRadioButton);
        FemaleRadioButton.setText("Female");

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel4.setText("First Name");

        FirstNameTextField.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        FirstNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                FirstNameTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                FirstNameTextFieldFocusLost(evt);
            }
        });
        FirstNameTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FirstNameTextFieldKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel5.setText("Contact");

        ContactTextfield.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        ContactTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ContactTextfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                ContactTextfieldFocusLost(evt);
            }
        });
        ContactTextfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ContactTextfieldKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel6.setText("Last Name");

        LastNameTextfield.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        LastNameTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                LastNameTextfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                LastNameTextfieldFocusLost(evt);
            }
        });
        LastNameTextfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LastNameTextfieldKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel7.setText("Email");

        EmailTextfield.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        EmailTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                EmailTextfieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                EmailTextfieldFocusLost(evt);
            }
        });
        EmailTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailTextfieldActionPerformed(evt);
            }
        });
        EmailTextfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EmailTextfieldKeyPressed(evt);
            }
        });

        addButton.setText("Add");
        addButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addButton.setkEndColor(new java.awt.Color(0, 204, 204));
        addButton.setkHoverEndColor(new java.awt.Color(0, 102, 153));
        addButton.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        addButton.setkHoverStartColor(new java.awt.Color(0, 204, 204));
        addButton.setkPressedColor(new java.awt.Color(0, 102, 153));
        addButton.setkSelectedColor(new java.awt.Color(0, 102, 153));
        addButton.setkStartColor(new java.awt.Color(0, 102, 153));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        updateButton.setkEndColor(new java.awt.Color(0, 204, 204));
        updateButton.setkHoverEndColor(new java.awt.Color(0, 102, 153));
        updateButton.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        updateButton.setkHoverStartColor(new java.awt.Color(0, 204, 204));
        updateButton.setkPressedColor(new java.awt.Color(0, 102, 153));
        updateButton.setkSelectedColor(new java.awt.Color(0, 102, 153));
        updateButton.setkStartColor(new java.awt.Color(0, 102, 153));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deleteButton.setkEndColor(new java.awt.Color(0, 204, 204));
        deleteButton.setkHoverEndColor(new java.awt.Color(0, 102, 153));
        deleteButton.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        deleteButton.setkHoverStartColor(new java.awt.Color(0, 204, 204));
        deleteButton.setkPressedColor(new java.awt.Color(0, 102, 153));
        deleteButton.setkSelectedColor(new java.awt.Color(0, 102, 153));
        deleteButton.setkStartColor(new java.awt.Color(0, 102, 153));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/generate.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/refresh.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout supplierAddPanelLayout = new javax.swing.GroupLayout(supplierAddPanel);
        supplierAddPanel.setLayout(supplierAddPanelLayout);
        supplierAddPanelLayout.setHorizontalGroup(
            supplierAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supplierAddPanelLayout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(supplierAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, supplierAddPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FirstNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, supplierAddPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SupplierIdTextField))
                    .addGroup(supplierAddPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LastNameTextfield)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(47, 47, 47)
                .addGroup(supplierAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(supplierAddPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(MaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FemaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(supplierAddPanelLayout.createSequentialGroup()
                        .addGroup(supplierAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(supplierAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EmailTextfield)
                            .addComponent(ContactTextfield))))
                .addContainerGap(43, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, supplierAddPanelLayout.createSequentialGroup()
                .addContainerGap(162, Short.MAX_VALUE)
                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        supplierAddPanelLayout.setVerticalGroup(
            supplierAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supplierAddPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(supplierAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SupplierIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FemaleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(supplierAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ContactTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(supplierAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LastNameTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(supplierAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(supplierAddPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jButton1.getAccessibleContext().setAccessibleDescription("");

        bodyPanel.add(supplierAddPanel, java.awt.BorderLayout.PAGE_START);

        SupplierTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        SupplierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier ID", "First Name", "Last Name", "Contact", "Email", "Company", "Gender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SupplierTable.getTableHeader().setReorderingAllowed(false);
        SupplierTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SupplierTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(SupplierTable);

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Search By Company");

        CompanyComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CompanyComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompanyComboBoxActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jLabel9.setText("Add Company");

        CompanySelectCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CompanySelectCombobox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CompanySelectComboboxKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tablePanelLayout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CompanyComboBox, 0, 260, Short.MAX_VALUE)
                        .addGap(88, 88, 88)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(CompanySelectCombobox, 0, 260, Short.MAX_VALUE)
                        .addGap(51, 51, 51))
                    .addGroup(tablePanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 886, Short.MAX_VALUE)
                        .addGap(30, 30, 30))))
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CompanyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(CompanySelectCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        bodyPanel.add(tablePanel, java.awt.BorderLayout.CENTER);

        BackToDashboardPanel.setBackground(new java.awt.Color(153, 153, 153));
        BackToDashboardPanel.setPreferredSize(new java.awt.Dimension(946, 50));

        BackToDashboardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/back-arrow.png"))); // NOI18N
        BackToDashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToDashboardButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BackToDashboardPanelLayout = new javax.swing.GroupLayout(BackToDashboardPanel);
        BackToDashboardPanel.setLayout(BackToDashboardPanelLayout);
        BackToDashboardPanelLayout.setHorizontalGroup(
            BackToDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackToDashboardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackToDashboardButton)
                .addContainerGap(902, Short.MAX_VALUE))
        );
        BackToDashboardPanelLayout.setVerticalGroup(
            BackToDashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackToDashboardPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BackToDashboardButton)
                .addContainerGap())
        );

        bodyPanel.add(BackToDashboardPanel, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(bodyPanel, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //search
    private void CompanyComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompanyComboBoxActionPerformed
        String selectedCompany = CompanyComboBox.getSelectedItem().toString();

        if (!selectedCompany.equals("Select Company")) {
            searchByCompany(selectedCompany);
        }
    }//GEN-LAST:event_CompanyComboBoxActionPerformed

    private void EmailTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailTextfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailTextfieldActionPerformed

    private void BackToDashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToDashboardButtonActionPerformed

        this.dispose();

    }//GEN-LAST:event_BackToDashboardButtonActionPerformed

    //ID generator
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SupplierIdTextField.setCursor(new Cursor(Cursor.HAND_CURSOR));

        SupplierIdTextField.setForeground(Color.BLACK);

        long id = System.currentTimeMillis();
        SupplierIdTextField.setText("ESR" + String.valueOf(id));

        SupplierIdTextField.setEnabled(true);

        SupplierIdTextField.setFocusable(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    //add
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        try {

            String supplierid = SupplierIdTextField.getText();
            String firstname = FirstNameTextField.getText();
            String lastname = LastNameTextfield.getText();
            String gender = MaleRadioButton.isSelected() ? "1" : "2";
            String contact = ContactTextfield.getText();
            String email = EmailTextfield.getText();
            String company = String.valueOf(CompanySelectCombobox.getSelectedItem());

            if (supplierid.isEmpty() || supplierid.equals("Supplier ID")) {
                JOptionPane.showMessageDialog(this, "Please click the button for a new ID", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (firstname.isEmpty() || firstname.equals("First Name")) {
                JOptionPane.showMessageDialog(this, "Please enter First Name", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (lastname.isEmpty() || lastname.equals("Last Name")) {
                JOptionPane.showMessageDialog(this, "Please enter Last Name", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (!MaleRadioButton.isSelected() && !FemaleRadioButton.isSelected()) {
                JOptionPane.showMessageDialog(this, "Please select Gender", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (contact.isEmpty() || contact.equals("Contact Number")) {
                JOptionPane.showMessageDialog(this, "Please enter Contact Number", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (!contact.matches("^(?:0|94|\\+94|0094)?(?:(11|21|23|24|25|26|27|31|32|33|34|35|36|37|38|41|45|47|51|52|54|55|57|63|65|66|67|81|91)(0|2|3|4|5|7|9)|7(0|1|2|4|5|6|7|8)\\d)\\d{6}$")) {

                JOptionPane.showMessageDialog(this, "Please enter valid Mobile Number", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (email.isEmpty() || email.equals("Email")) {
                JOptionPane.showMessageDialog(this, "Please enter Email", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (!email.matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$")) {
                JOptionPane.showMessageDialog(this, "Please enter valid Email", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (company.equals("Select Company")) {
                JOptionPane.showMessageDialog(this, "Please select a Company", "Warning", JOptionPane.WARNING_MESSAGE);

            } else {

                ResultSet resultSet = MySql.executeSearch("SELECT * FROM `supplier` WHERE `email`= '" + email + "' OR `contact_number`='" + contact + "'");

                if (resultSet.next()) {

                    JOptionPane.showMessageDialog(this, "Supplier already exists", "Warning", JOptionPane.WARNING_MESSAGE);
                } else {

                    MySql.executeUpdate("ALTER TABLE `supplier` AUTO_INCREMENT = 1");

                    MySql.executeUpdate("INSERT INTO `supplier` (`supplier_id`,`first_name`,`last_name`,`contact_number`,`email`,`company_company_id`,`gender_gender_id` ) VALUES ('" + supplierid + "','" + firstname + "','" + lastname + "','" + contact + "','" + email + "','" + companyMap.get(company) + "','" + gender + "')");

                    loadSuppliers();

                    reset();

                    SupplierIdTextField.grabFocus();

                    JOptionPane.showMessageDialog(this, "Supplier Added Successfully", "Information", JOptionPane.INFORMATION_MESSAGE);

                }
            }
        } catch (Exception e) {

            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error occurred while adding the Supplier", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    //refresh
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        reset();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void SupplierIdTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SupplierIdTextFieldFocusGained
        if (SupplierIdTextField.getText().equals("Supplier ID")) {
            SupplierIdTextField.setText("");
            SupplierIdTextField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_SupplierIdTextFieldFocusGained

    //update
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        int row = SupplierTable.getSelectedRow();

        if (row == -1) {

            JOptionPane.showMessageDialog(this, "Please Select a Row", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {

            String supplierid = SupplierIdTextField.getText();
            String firstname = FirstNameTextField.getText();
            String lastname = LastNameTextfield.getText();
            String gender = MaleRadioButton.isSelected() ? "1" : "2"; //Assuming IDs male=1 , female=2
            String contact = ContactTextfield.getText();
            String email = EmailTextfield.getText();
            String company = String.valueOf(CompanySelectCombobox.getSelectedItem());

            String selectedSupplierid = String.valueOf(SupplierTable.getValueAt(row, 0));

            if (supplierid.isEmpty() || supplierid.equals("Supplier ID")) {
                JOptionPane.showMessageDialog(this, "Please click the button for a new ID", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (firstname.isEmpty() || firstname.equals("First Name")) {
                JOptionPane.showMessageDialog(this, "Please enter First Name", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (lastname.isEmpty() || lastname.equals("Last Name")) {
                JOptionPane.showMessageDialog(this, "Please enter Last Name", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (!MaleRadioButton.isSelected() && !FemaleRadioButton.isSelected()) {
                JOptionPane.showMessageDialog(this, "Please select Gender", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (contact.isEmpty() || contact.equals("Contact Number")) {
                JOptionPane.showMessageDialog(this, "Please enter Contact Number", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (!contact.matches("^(?:0|94|\\+94|0094)?"
                    + "(7[01245678]\\d{7}|"
                    + "(11|21|23|24|25|26|27|31|32|33|34|35|36|37|38|41|45|47|51|52|54|55|57|63|65|66|67|81|91)\\d{6})$")) {
                JOptionPane.showMessageDialog(this, "Please enter valid Mobile Number", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (email.isEmpty() || email.equals("Email")) {
                JOptionPane.showMessageDialog(this, "Please enter Email", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (!email.matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$")) {
                JOptionPane.showMessageDialog(this, "Please enter valid Email", "Warning", JOptionPane.WARNING_MESSAGE);

            } else if (company.equals("Select Company")) {
                JOptionPane.showMessageDialog(this, "Please select a Company", "Warning", JOptionPane.WARNING_MESSAGE);

            } else {

                try {

                    ResultSet rs = MySql.executeSearch("SELECT * FROM `supplier` WHERE `supplier_id` = '" + supplierid + "' ");

                    if (rs.next()) {

                        MySql.executeUpdate("UPDATE `supplier` SET `first_name` = '" + firstname + "',`last_name` = '" + lastname + "',`contact_number` = '" + contact + "',`email` = '" + email + "',`company_company_id` = '" + companyMap.get(company) + "',`gender_gender_id` = '" + gender + "' "
                                + "WHERE `supplier_id` = '" + selectedSupplierid + "'");

                        loadSuppliers();
                        reset();

                        JOptionPane.showMessageDialog(this, "Supplier updated Successfully", "Information", JOptionPane.INFORMATION_MESSAGE);

                    }

                } catch (Exception e) {

                    e.printStackTrace();

                    JOptionPane.showMessageDialog(this, "Error occurred while updating the Supplier Data", "Error", JOptionPane.ERROR_MESSAGE);

                }

            }

        }
    }//GEN-LAST:event_updateButtonActionPerformed

    //delete
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int selectedRow = SupplierTable.getSelectedRow();

        if (selectedRow == -1) {

            JOptionPane.showMessageDialog(this, "Please Select a Row to delete Supplier ", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {

            try {

                String selectedSupplierid = String.valueOf(SupplierTable.getValueAt(selectedRow, 0));

                int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this supplier?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
                if (confirm == JOptionPane.YES_OPTION) {

                    MySql.executeUpdate("DELETE FROM `supplier` WHERE `supplier_id`='" + selectedSupplierid + "' ");

                    MySql.executeUpdate("SET @row_number = 0");
                    MySql.executeUpdate("UPDATE `supplier` "
                            + "SET `supplier_id` = (@row_number := @row_number + 1) "
                            + "ORDER BY `supplier_id`");

                    MySql.executeUpdate("ALTER TABLE `supplier` AUTO_INCREMENT = 1");

                    JOptionPane.showMessageDialog(this, "Supplier Deleted Successfully", "Information", JOptionPane.INFORMATION_MESSAGE);

                    loadSuppliers();
                    reset();

                }
            } catch (Exception e) {

                e.printStackTrace();

            }

        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void SupplierTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupplierTableMouseClicked

        int row = SupplierTable.getSelectedRow();

        if (row == -1) {

            JOptionPane.showMessageDialog(this, "Please select a row", "Empty row", JOptionPane.WARNING_MESSAGE);

        } else {

            SupplierIdTextField.setText(String.valueOf(SupplierTable.getValueAt(row, 0)));
            FirstNameTextField.setText(String.valueOf(SupplierTable.getValueAt(row, 1)));
            LastNameTextfield.setText(String.valueOf(SupplierTable.getValueAt(row, 2)));
            ContactTextfield.setText(String.valueOf(SupplierTable.getValueAt(row, 3)));
            EmailTextfield.setText(String.valueOf(SupplierTable.getValueAt(row, 4)));

            CompanySelectCombobox.setSelectedItem(String.valueOf(SupplierTable.getValueAt(row, 5)));

            String gender = String.valueOf(SupplierTable.getValueAt(row, 6));

            if ("Male".equals(gender)) {

                MaleRadioButton.setSelected(true);
                FemaleRadioButton.setSelected(false);

            } else if ("Female".equals(gender)) {

                MaleRadioButton.setSelected(false);
                FemaleRadioButton.setSelected(true);

            }

        }

        if (evt.getClickCount() == 2) {

            String selectedSupplierID = String.valueOf(SupplierTable.getValueAt(row, 0));

            int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this supplier?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {

                try {

                    MySql.executeUpdate("DELETE FROM `supplier` WHERE `supplier_id`='" + selectedSupplierID + "'");

                    MySql.executeUpdate("SET @row_number = 0");
                    MySql.executeUpdate("UPDATE `supplier` "
                            + "SET `supplier_id` = (@row_number := @row_number + 1) "
                            + "ORDER BY `supplier_id`");

                    MySql.executeUpdate("ALTER TABLE `supplier` AUTO_INCREMENT = 1");

                    loadSuppliers();
                    reset();

                    JOptionPane.showMessageDialog(this, "Supplier Deleted Successfully", "Information", JOptionPane.INFORMATION_MESSAGE);

                } catch (Exception e) {

                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Error occurred while deleting the Supplier", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        }

    }//GEN-LAST:event_SupplierTableMouseClicked

    private void SupplierIdTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SupplierIdTextFieldKeyPressed
        if (evt.getKeyCode() == 10) {
            FirstNameTextField.grabFocus();
        }
    }//GEN-LAST:event_SupplierIdTextFieldKeyPressed

    private void FirstNameTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FirstNameTextFieldKeyPressed
        if (evt.getKeyCode() == 10) {
            LastNameTextfield.grabFocus();
        }
    }//GEN-LAST:event_FirstNameTextFieldKeyPressed

    private void ContactTextfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ContactTextfieldKeyPressed
        if (evt.getKeyCode() == 10) {
            EmailTextfield.grabFocus();
        }
    }//GEN-LAST:event_ContactTextfieldKeyPressed

    private void EmailTextfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailTextfieldKeyPressed
        if (evt.getKeyCode() == 10) {
            CompanySelectCombobox.grabFocus();
        }
    }//GEN-LAST:event_EmailTextfieldKeyPressed

    private void SupplierIdTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_SupplierIdTextFieldFocusLost
        if (SupplierIdTextField.getText().isEmpty()) {
            SupplierIdTextField.setText("Supplier ID");
            SupplierIdTextField.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_SupplierIdTextFieldFocusLost

    private void FirstNameTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FirstNameTextFieldFocusGained
        if (FirstNameTextField.getText().equals("First Name")) {
            FirstNameTextField.setText("");
            FirstNameTextField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_FirstNameTextFieldFocusGained

    private void FirstNameTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FirstNameTextFieldFocusLost
        if (FirstNameTextField.getText().isEmpty()) {
            FirstNameTextField.setText("First Name");
            FirstNameTextField.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_FirstNameTextFieldFocusLost

    private void LastNameTextfieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LastNameTextfieldFocusGained
        if (LastNameTextfield.getText().equals("Last Name")) {
            LastNameTextfield.setText("");
            LastNameTextfield.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_LastNameTextfieldFocusGained

    private void LastNameTextfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LastNameTextfieldFocusLost
        if (LastNameTextfield.getText().isEmpty()) {
            LastNameTextfield.setText("Last Name");
            LastNameTextfield.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_LastNameTextfieldFocusLost

    private void ContactTextfieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ContactTextfieldFocusGained
        if (ContactTextfield.getText().equals("Contact Number")) {
            ContactTextfield.setText("");
            ContactTextfield.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_ContactTextfieldFocusGained

    private void ContactTextfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ContactTextfieldFocusLost
        if (ContactTextfield.getText().isEmpty()) {
            ContactTextfield.setText("Contact Number");
            ContactTextfield.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_ContactTextfieldFocusLost

    private void EmailTextfieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailTextfieldFocusGained
        if (EmailTextfield.getText().equals("Email")) {
            EmailTextfield.setText("");
            EmailTextfield.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_EmailTextfieldFocusGained

    private void EmailTextfieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_EmailTextfieldFocusLost
        if (EmailTextfield.getText().isEmpty()) {
            EmailTextfield.setText("Email");
            EmailTextfield.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_EmailTextfieldFocusLost

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            SupplierIdTextField.grabFocus();

        }

    }//GEN-LAST:event_jButton1KeyPressed

    private void LastNameTextfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LastNameTextfieldKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            ContactTextfield.grabFocus();

        }

    }//GEN-LAST:event_LastNameTextfieldKeyPressed

    private void CompanySelectComboboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CompanySelectComboboxKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            addButton.doClick();

        }

    }//GEN-LAST:event_CompanySelectComboboxKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        FlatMacLightLaf.setup();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewSupplier().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackToDashboardButton;
    private javax.swing.JPanel BackToDashboardPanel;
    private javax.swing.JComboBox<String> CompanyComboBox;
    private javax.swing.JComboBox<String> CompanySelectCombobox;
    private javax.swing.JTextField ContactTextfield;
    private javax.swing.JTextField EmailTextfield;
    private javax.swing.JRadioButton FemaleRadioButton;
    private javax.swing.JTextField FirstNameTextField;
    private javax.swing.JTextField LastNameTextfield;
    private javax.swing.JRadioButton MaleRadioButton;
    private javax.swing.JTextField SupplierIdTextField;
    private javax.swing.JTable SupplierTable;
    private com.k33ptoo.components.KButton addButton;
    private javax.swing.JPanel bodyPanel;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.k33ptoo.components.KButton deleteButton;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private com.k33ptoo.components.KButton kButton1;
    private javax.swing.JPanel supplierAddPanel;
    private javax.swing.JPanel tablePanel;
    private com.k33ptoo.components.KButton updateButton;
    // End of variables declaration//GEN-END:variables

    private void reset() {

        SupplierIdTextField.setText("");
        FirstNameTextField.setText("");
        LastNameTextfield.setText("");
        ContactTextfield.setText("");
        EmailTextfield.setText("");
        buttonGroup1.clearSelection();
        jButton1.grabFocus();
        CompanyComboBox.setSelectedIndex(0);
        CompanySelectCombobox.setSelectedIndex(0);
        addButton.setEnabled(true);
        SupplierTable.clearSelection();

        addPlaceholder();
    }
}
